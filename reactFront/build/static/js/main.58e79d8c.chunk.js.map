{"version":3,"sources":["components/Font.js","components/MediaCard.js","components/ResumeTable.js","components/ResumeModal.js","components/SelfIntroduceCard.js","module/partActionReducer.js","module/pendReducer.js","module/requestSaga.js","module/createLoadSaga.js","module/axios.js","reducers/loadPrivacy.js","module/utils.js","containers/hoBlock.js","components/Error500.js","containers/hoLoading.js","containers/hoLoadCompoent.js","containers/SelfIntroduceCardSaga.js","components/PopOver.js","components/HoverCard.js","components/TeckstackList.js","reducers/loadTecStack.js","containers/TecstackListSaga.js","components/ItemCard.js","components/ToyList.js","reducers/loadToyes.js","containers/ToyListSaga.js","App.js","serviceWorker.js","module/mergeReducer.js","reducers/index.js","index.js"],"names":["Font","children","size","face","weight","FontStyle","styled","span","MediaCard","headTag","minWidth","imgSrc","style","Media","left","object","src","alt","body","middle","heading","ResumeTable","header","trs","pairOfthtdArr","map","thtd","key","scope","Table","ResumeModal","buttonLabel","privacy","className","useState","modal","setModal","toggle","resumeBody","createResumeBody","props","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","createSchoolTdthArr","personalDATA","th","td","education","university","subject","gpa","admission","graduation","createHandcapTdthArr","handcapPerson","createBohunTdthArr","bohun","createArmyDutyTdthArr","soldire","soldireKind","basic","name","nation","birth","gender","tel","phone","email","accessRoot","army","handcap","SelfIntroduceCard","gitHub","blog","desc","faceImgSrc","cardBody","icon","faPhone","faAt","link","faGithub","faIgloo","inconMatcher","Header","Jumbotron","Container","obj","Row","Col","href","target","rel","partActionReducer","handlerMap","initState","state","action","produce","draft","handler","type","FINISH","pass","a","pending","createAction","finish","requestStateReducer","payload","createActionTypes","createRequestSaga","req","success","failure","put","call","response","data","error","createLoadSaga","restAPI","saga","eventName","onSuccessStateName","onFailureStateName","SUCCESS","FAILURE","loadAction","requestSaga","reducer","takeLatest","client","axios","create","loadSaga","axiosCon","get","textTo_pTag","text","tArr","split","t","block","display","alignItems","justifyContent","width","height","background","borderBottom","hoBlock","Compo","request","status","statusText","Head","LoaderExampleInlineCentered","Loader","active","inline","hoLoading","LoadingCompo","loading","bindbasic","hoLoadCompoent","bindPropSuccess","LoadCompo","useSelector","dispatch","useDispatch","useEffect","loadPrivacy","modifiers","preventOverflow","enabled","flip","hide","PopOver","popoverOpen","setPopoverOpen","Popover","placement","PopoverBody","HoverCard","id","HoverDIV","Card","defaultCardStyle","CardImg","top","backgroundColor","borderColor","div","TeckstackList","tecStack","console","log","list","createTecCard","tec","loadTecStack","Array","isArray","forEach","ItemCard","meta","extra","Item","Image","Content","Meta","Description","Extra","ToyList","toyList","toyes","createList","Group","divided","fontHeaderProps","fontMeta","toy","github","createToyHead","myRole","tecList","item","idx","Label","content","createTeces","loadToyes","App","SelfIntroduceCardSaga","TecstackListSaga","Boolean","window","location","hostname","match","reducers","rootSaga","rootReducer","pendReducer","reduce","acc","r","nextState","all","sagaMiddleWare","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58e79d8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Font = ({ children, size='13.5pt' ,face=\"Hanna\", weight=\"normal\"})=>{\r\n    const FontStyle= styled.span`\r\n    font-size:${size};\r\n    font-family:${face};\r\n    font-weight:${weight};`;\r\n   return (\r\n     <FontStyle>\r\n        {children}\r\n     </FontStyle>\r\n   )\r\n}\r\n\r\nexport default Font;","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport Font from './Font';\r\n\r\nconst MediaCard = ({children, headTag, minWidth='32px', imgSrc, })=>{\r\n  // /image/face.png\r\n   const style = {};\r\n  headTag = headTag || <Font face=\"Hanna\" size=\"20px\" weight=\"bold\"> HEAD </Font>;\r\n  style.minWidth= minWidth;\r\n     return (\r\n   <Media>\r\n      <Media left>\r\n        <Media style={ style } object src={imgSrc} alt=\"My PlaceHolder Picture\" />\r\n      </Media>\r\n      <Media body middle>\r\n            <Media heading>{headTag}</Media>\r\n             {children}\r\n      </Media> \r\n\r\n  </Media>\r\n    );\r\n}\r\n\r\nexport default MediaCard;","import React from 'react';\r\nimport {Table} from 'reactstrap';\r\nconst ResumeTable =({header , pairOfthtdArr })=>{\r\n const trs= pairOfthtdArr.map((thtd,key)=>{\r\n    return (\r\n        <tr key={key}>\r\n            <th scope=\"row\">{thtd['th']}</th>\r\n            <td>{thtd['td']}</td>\r\n       </tr>\r\n    )\r\n })\r\n    return (\r\n         <Table>\r\n          <thead>{header}</thead>\r\n          <tbody>{trs}</tbody>  \r\n        </Table>\r\n    )\r\n}\r\nexport default ResumeTable;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader,\r\n  ModalBody, ModalFooter } from 'reactstrap';\r\nimport Font from './Font';\r\nimport ResumeTable from './ResumeTable';\r\n\r\n\r\n  const ResumeModal = ({buttonLabel ,privacy, className})=>{\r\n   const [modal, setModal] = useState(false);\r\n   const toggle = () => setModal(!modal);\r\n\r\n   const resumeBody= createResumeBody(privacy).map((props,key)=>{\r\n           return   <ResumeTable key={key} {...props}/>;\r\n    })\r\n     return(\r\n     <>\r\n      <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\r\n      \r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n             <Font face='Jeju' weight ='bold' size ='20px' >지원분야: 신입>프론트 엔드 </Font>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n             {resumeBody}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>닫기</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      </>\r\n     );\r\n\r\n  }\r\n  export default ResumeModal;\r\n\r\nconst createBasicTdthArr = (personalDATA)=>{\r\n    const {name , nation, birth,gender,tel,phone,email,accessRoot}\r\n        = personalDATA;\r\n        return [\r\n            {th:'성명' , td: name },\r\n            {th:'국적', td:nation },\r\n            {th:'생년월일' , td:birth }, \r\n            {th:'성별' , td: gender}, \r\n            {th:'전화번호', td:tel }, \r\n            {th:'휴대전화' , td:phone }, \r\n            {th:'이메일' , td:email }, \r\n            {th:'지원경로' , td:accessRoot}, \r\n        ]\r\n }\r\nconst createSchoolTdthArr =(personalDATA)=>{\r\n const { education , university ,subject,gpa ,admission ,graduation}\r\n        = personalDATA ;\r\n        return [\r\n            {th:'학력' , td: education },\r\n            {th:'학교', td:university },\r\n            {th:'전공' , td:subject }, \r\n            {th:'학점' , td: gpa}, \r\n            {th:'입학년월', td:admission }, \r\n            {th:'졸업년월' , td:graduation }, \r\n        ]\r\n}\r\n    const createHandcapTdthArr =(personalDATA)=>{\r\n        return [{th:'장애 구분' , td:personalDATA.handcapPerson }];\r\n    }\r\n    \r\n    const createBohunTdthArr =(personalDATA)=>{\r\n        return [{th:'보훈 대상' , td:personalDATA.bohun }]\r\n    }\r\n    \r\n    const createArmyDutyTdthArr= (personalDATA)=>{\r\n        return [\r\n            {th:'병역 구분' , td:personalDATA.soldire },\r\n            {th:'군별' , td:personalDATA.soldireKind },\r\n         ]\r\n    }\r\n    \r\n    const createResumeBody =(privacy)=>{\r\n        const basic={\r\n            header: <Font size='20px'>기본 인적 사항</Font>,\r\n            pairOfthtdArr: createBasicTdthArr(privacy)\r\n        }\r\n        const bohun ={\r\n            header: <Font size='20px'>보훈 사항</Font>,\r\n            pairOfthtdArr: createBohunTdthArr(privacy)\r\n        }\r\n       const army= {\r\n          header: <Font size='20px'>병역 사항</Font>,\r\n          pairOfthtdArr: createArmyDutyTdthArr(privacy)\r\n       }\r\n       const handcap= {\r\n          header: <Font size='20px'>장애 사항</Font>,\r\n          pairOfthtdArr: createHandcapTdthArr(privacy)\r\n       } \r\n       const school = {\r\n          header: <Font size='20px'>학력 사항</Font>,\r\n          pairOfthtdArr: createSchoolTdthArr(privacy)\r\n       }\r\n        const body= [ basic, school, army , bohun ,handcap];\r\n    \r\n        return body;\r\n}\r\n    ","import React from 'react';\r\nimport { faPhone ,faAt,faIgloo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\r\nimport Font from './Font';\r\nimport MediaCard from './MediaCard';\r\nimport ResumeModal from './ResumeModal';\r\nconst style = {\r\n    \"backgroundPosition\": \"center\",\r\n    \"width\": \"500px\",\r\n}\r\n\r\nconst SelfIntroduceCard = (privacy)=>{\r\n  const {\r\n     name,email,phone,gitHub,blog,desc=\"\",\r\n     faceImgSrc='/image/face.png'} = privacy;\r\n\r\n     \r\n    const cardBodyMatch=[\r\n          {icon: faPhone ,name:phone },\r\n          {icon: faAt ,name:email,link:`mailto:${email}` }, \r\n          {icon: faGithub ,name:\"깃허브\", link:gitHub },\r\n          {icon: faIgloo ,name:\"블로그\", link:blog },\r\n    ]\r\n    const cardBody  = cardBodyMatch.map(inconMatcher);\r\n    const Header= <Font size=\"20px\" weight=\"bold\">{name}</Font>;\r\n    return (\r\n        <div style={style}>\r\n           <Font size=\"70px\">\r\n               신입> 프론트 엔드\r\n           </Font>\r\n           <Jumbotron> \r\n            <MediaCard imgSrc= {faceImgSrc}  headTag={Header} > \r\n               <Container>{cardBody}</Container>\r\n\r\n                 <ResumeModal privacy={privacy} buttonLabel=\"이력 상세 보기\"/>\r\n            </MediaCard>\r\n        \r\n           <hr className=\"my-2\" />\r\n           <Font size=\"20px\" face=\"Hanna\" >\r\n                   간략한 자기소개\r\n           </Font>\r\n            <Font size=\"14px\" face=\"Jeju\" weight=\"bold\">{desc}</Font>\r\n           </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\nexport default SelfIntroduceCard;\r\n\r\nconst inconMatcher =(obj,key)=>{\r\n    const {icon,name, link}= obj;\r\n      return (\r\n          <Row key={key}>\r\n             <Col> \r\n              {\r\n                link? <a href= {link}  target=\"_blank\" rel=\"noopener noreferrer\" ><FontAwesomeIcon size='2x' icon={icon}/></a>:\r\n                  <FontAwesomeIcon size='2x' icon={icon}/>\r\n              }&nbsp;&nbsp;\r\n                  <Font face=\"Jeju\" weight=\"bold\" size='17px'>{name}</Font> \r\n             </Col>\r\n           </Row>\r\n         )\r\n};\r\n","import produce from 'immer';\r\nfunction partActionReducer(handlerMap,initState={}){\r\n   return function (state = initState ,action){\r\n     return produce(state, draft =>{\r\n         const handler= handlerMap[action.type];\r\n         if(handler) handler(draft, action);\r\n     })\r\n   }\r\n}\r\nexport default partActionReducer;","\r\nimport {createAction} from 'redux-actions';\r\nimport partActionReducer from './partActionReducer';\r\n\r\nexport const PENDING ='PENDING/REQUEST/SAGA';\r\nexport const FINISH = 'FINISH/REQUEST/SAGA';\r\nconst pass = a => (a);\r\n\r\nexport const pending= createAction(\r\n    PENDING,\r\n    pass\r\n)\r\nexport const finish= createAction(\r\n    FINISH,\r\n    pass\r\n)\r\nconst requestStateReducer = partActionReducer({\r\n    [PENDING]:(draft , action)=>{ draft[action.payload]=true},\r\n    [FINISH]:(draft , action)=>{ draft[action.payload]=false}\r\n  },{});\r\n\r\n  export default requestStateReducer;","import {put,call,delay } from 'redux-saga/effects';\r\nimport { pending ,finish } from './pendReducer';\r\n\r\nexport const createActionTypes = type =>{\r\n      const success = `${type}_SUCCESS`;\r\n      const failure = `${type}_FAILURE`;\r\n    return [success, failure,type];\r\n}\r\n\r\nexport const createRequestSaga = (type, req)=>{\r\n   const [success, failure]=  createActionTypes(type);\r\n\r\n   return function*(action){\r\n          yield put(pending(type));\r\n          // 일부러 딜레이\r\n       //  yield delay(5000);\r\n        try{\r\n            const response= yield call(req, action.payload);\r\n            yield put({\r\n                type:success,\r\n                payload: response.data,\r\n            });\r\n\r\n        }catch(e){\r\n            yield put({\r\n                type:failure,\r\n                payload:e,\r\n                error:true       \r\n            });\r\n        }finally{\r\n           yield put(finish(type));\r\n        }\r\n   }\r\n}\r\n\r\n","import {takeLatest} from 'redux-saga/effects';\r\nimport {createAction} from 'redux-actions';\r\nimport {createRequestSaga,createActionTypes } from './requestSaga'\r\nimport partActionReducer from './partActionReducer';\r\n\r\nexport default function createLoadSaga(restAPI,{\r\n    eventName,\r\n    onSuccessStateName,\r\n    onFailureStateName\r\n} ){\r\n\r\nif(!eventName || !restAPI )return;\r\nif(!onSuccessStateName) onSuccessStateName = eventName;\r\nif(!onFailureStateName) onFailureStateName =`FAIL_${onSuccessStateName}`;\r\n\r\nconst [ SUCCESS , FAILURE]= createActionTypes(eventName);\r\nconst loadAction = createAction(eventName);\r\n\r\n\r\nconst requestSaga= createRequestSaga(eventName,restAPI);\r\n  \r\nfunction *saga(){\r\n    yield takeLatest(eventName,requestSaga);\r\n}\r\nconst initState= {\r\n    [eventName]:true,\r\n    [onSuccessStateName]:false,\r\n    [onFailureStateName]:false,\r\n}\r\n\r\nconst reducer = partActionReducer({\r\n    [SUCCESS]:(draft, action)=>{\r\n       draft[onSuccessStateName]=action.payload;\r\n    },\r\n    [FAILURE]:(draft, action)=>{\r\n        draft[onFailureStateName]=action.payload;\r\n    }},initState);\r\n\r\n  return {\r\n      eventName,\r\n      loadAction ,\r\n      onSuccessStateName,\r\n      onFailureStateName,\r\n      reducer,\r\n      saga,\r\n  }\r\n};\r\n\r\n","import axios from 'axios';\r\nconst client = axios.create();\r\n\r\n//client.defaults.baseURL= \"http://localhost:4000/\";\r\n\r\nexport default client;","import createLoadSaga from '../module/createLoadSaga';\r\nimport axiosCon from '../module/axios';\r\n\r\nexport const loadRest =()=>( \r\n  axiosCon.get(`/api/privacy/`)\r\n)\r\nconst loadSaga= createLoadSaga(loadRest,{\r\n    eventName:'SAGA/LOAD/PRIVACY',\r\n    onSuccessStateName:'privacy'\r\n});\r\n\r\nexport default loadSaga;\r\n","import React from 'react';\r\n\r\n\r\nexport function textTo_pTag(text){\r\n    const  tArr=  text.split('</p>').map((t,key)=>{\r\n         return <p key = {key}>{t}</p>;\r\n    })\r\n    return <>{tArr}</>\r\n} ","import React from 'react';\r\n// 하나의 컴포넌트 한 화면에 렌더링\r\nconst style = {\r\n    block :{\r\n         display:'flex',\r\n         alignItems:'center',\r\n         justifyContent:'center',\r\n         width:'100vw',\r\n         height:'100vh',\r\n         background:'#fff',\r\n         borderBottom:'1px solid rgba(0,0,0,.2)'\r\n    }\r\n  }\r\nfunction hoBlock(Compo){\r\n    return (props)=>{\r\n        return(\r\n          <div style= {style.block}>\r\n              <Compo {...props}/>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  export default hoBlock;","import React from 'react';\r\nimport Font from './Font';\r\nimport MediaCard from './MediaCard';\r\nimport hoBlock from '../containers/hoBlock';\r\n\r\nconst Error500 = (props)=>{\r\n   const {status , statusText } =props && props.request;\r\n   const Head = <Font size='50px'>HTTP {status} ERROR</Font>\r\n   return(\r\n        <MediaCard headTag= {Head} imgSrc='image/sadCat.jpg' >\r\n              <p><Font size='30px'>{statusText}</Font></p>\r\n        </MediaCard>\r\n    )\r\n}\r\n\r\nexport default hoBlock(Error500);\r\n","import React from 'react';\r\nimport { Loader } from 'semantic-ui-react'\r\nimport Font from '../components/Font';\r\nimport Error500 from '../components/Error500';\r\n\r\nconst LoaderExampleInlineCentered = () =>\r\n (<Loader active inline='centered' >\r\n     <Font face=\"Jeju\" weight=\"bold\" size=\"15px\">Loading</Font></Loader>)\r\n\r\n// \r\n\r\nconst hoLoading=(Compo, LoadingCompo=LoaderExampleInlineCentered)=>{\r\n    return (props)=>{\r\n        const {loading ,success,failure} = props;\r\n         return (\r\n              <>{\r\n                loading? <LoadingCompo/>:\r\n                  failure? <Error500 {...failure}/>:\r\n                             <Compo {...success}/>\r\n              }</>\r\n         )\r\n    }\r\n}\r\n\r\nexport default hoLoading;","import React,{useEffect} from 'react';\r\nimport {useSelector , useDispatch } from 'react-redux';\r\nimport hoLoading from './hoLoading';\r\n\r\n//이거 커스텀 훅이랑 컴포넌트로 나눠야할듯\r\n// 지금 애매하게 결합된 상태.\r\n\r\nconst bindbasic =(props,success)=>{\r\n     return {\r\n         ...success,\r\n         ...props\r\n     }\r\n}\r\n const hoLoadCompoent= (Compo,{\r\n  eventName,onFailureStateName ,loadAction,onSuccessStateName \r\n},bindPropSuccess=bindbasic) =>{\r\nconst LoadCompo= hoLoading(Compo);\r\n\r\nreturn (props)=>{\r\n        const success = useSelector((state)=>(state[onSuccessStateName]),[]);\r\n        const failure  = useSelector((state)=>(state[onFailureStateName]),[]);\r\n        const loading  = useSelector((state)=>(state[eventName]),[]);\r\n        const dispatch = useDispatch();\r\n        useEffect(()=>{\r\n            dispatch(loadAction());\r\n        },[dispatch]);\r\n\r\n    return (\r\n        <LoadCompo\r\n         loading={loading} \r\n         success={bindPropSuccess(props,success)} \r\n         failure={failure}/>\r\n    );\r\n }\r\n}\r\n\r\nexport default hoLoadCompoent;","\r\nimport SelfIntroduceCard from '../components/SelfIntroduceCard';\r\nimport loadPrivacy from '../reducers/loadPrivacy';\r\nimport {textTo_pTag} from '../module/utils';\r\nimport hoBlock from './hoBlock'\r\nimport hoLoadCompoent from './hoLoadCompoent';\r\n\r\nconst LoadSICsaga = hoLoadCompoent(SelfIntroduceCard ,loadPrivacy,\r\n(props,success)=>{\r\n  if(success &&typeof success.desc === 'string' )\r\n     success.desc = textTo_pTag( success.desc);\r\n   return {...props , ...success};\r\n})\r\n\r\nexport default hoBlock(LoadSICsaga);\r\n\r\n","import React, { useState } from 'react';\r\nimport { Popover, PopoverBody } from 'reactstrap';\r\n\r\nconst modifiers = {\r\n  preventOverflow: {\r\n    enabled: false,\r\n  },\r\n  flip: {\r\n    enabled: false,\r\n  },\r\n  hide:{\r\n    enabled: false\r\n  }\r\n};\r\n\r\nconst PopOver = ({children , target}) => {\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n  return (\r\n    <div>\r\n      <Popover placement=\"bottom\" isOpen={ popoverOpen } modifiers={modifiers} \r\n      target={target} toggle={toggle}>\r\n            <PopoverBody>\r\n                  {children}\r\n             </PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopOver;","import React  from 'react';\r\nimport {\r\n  Card, CardImg\r\n} from 'reactstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst HoverCard = ({src ,id})=>{\r\n    return (\r\n        <HoverDIV id={id}>\r\n           <Card  style={defaultCardStyle } >\r\n             <CardImg top width=\"100%\" src={src} alt=\"Card image cap\" />\r\n           </Card>\r\n        </HoverDIV>\r\n    );\r\n}\r\nexport default HoverCard;\r\n\r\nconst defaultCardStyle= {\r\n  backgroundColor: '#fff',\r\n  borderColor: '#fff'\r\n};\r\n\r\nconst HoverDIV = styled.div`\r\n\tcolor: #000;\r\n\t:hover {\r\n\t\tcolor: #ed1212;\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n","import React from 'react';\r\nimport { Container, Row, Col} from 'reactstrap';\r\nimport Font from './Font';\r\nimport PopOver from './PopOver';\r\nimport HoverCard from './HoverCard';\r\n\r\nconst TeckstackList = (props)=>{\r\n    const {tecStack} = props;\r\n    console.log(tecStack);\r\nconst list =tecStack&&tecStack.map(createTecCard);\r\nreturn (\r\n    <Container>\r\n     <Row>\r\n          <Col>\r\n            <Font size=\"50px\">기술 스택</Font>\r\n          </Col>\r\n     </Row>\r\n     <Row>\r\n          {list}\r\n     </Row>\r\n    </Container>\r\n )\r\n}\r\n\r\nexport default TeckstackList;\r\n\r\nconst createTecCard = (tec,key)=>{\r\n    const {name ,src, desc} = tec;\r\n    const id = `card_${key}`;\r\nreturn (\r\n    <Col key = {key}> \r\n       <HoverCard id= {id} src={src} />\r\n      <PopOver target ={id}>\r\n          <Font size='17.5px' face=\"Jeju\">{desc}</Font>\r\n     </PopOver>\r\n    </Col>\r\n)\r\n}\r\n\r\n","import createLoadSaga from '../module/createLoadSaga';\r\nimport axiosCon from '../module/axios';\r\n\r\n\r\nexport const loadRest =()=>( \r\n  axiosCon.get(`/api/tecStack/`)\r\n )\r\n  \r\nconst loadSaga= createLoadSaga(loadRest,{\r\n    eventName:'SAGA/LOAD/TECSTACK',\r\n    onSuccessStateName:'tecStack'\r\n});\r\n\r\nexport default loadSaga;","\r\nimport TeckstackList from '../components/TeckstackList';\r\nimport loadTecStack from '../reducers/loadTecStack';\r\nimport {textTo_pTag} from '../module/utils';\r\nimport hoBlock from './hoBlock'\r\nimport hoLoadCompoent from './hoLoadCompoent';\r\n\r\nconst LoadTecStackListSaga = hoLoadCompoent(TeckstackList ,loadTecStack,(props,success)=>{\r\n  \r\n//    if(Array.isArray(success) && success[0]&&\r\n//       typeof success[0].desc ==='string' ){\r\n//     success.forEach((tec)=>{\r\n//       if(tec && typeof tec.desc ==='string')\r\n//          tec.desc=  textTo_pTag( tec.desc);\r\n//     })\r\n//    }\r\n    if(Array.isArray(success))\r\n     if(success[0] && typeof success[0].desc ==='string' ){\r\n        success.forEach((tec)=>{\r\n             if(typeof tec.desc ==='string')\r\n                tec.desc= textTo_pTag( tec.desc);\r\n        })\r\n    }\r\n\r\n   return {\r\n       ...props,\r\n    tecStack:success\r\n   }\r\n})\r\n\r\nexport default hoBlock(LoadTecStackListSaga);\r\n\r\n\r\n// import React, {useEffect} from 'react';\r\n// import TeckstackList from '../components/TeckstackList';\r\n// import loadTecStack from '../reducers/loadTecStack';\r\n// const TecList= hoBlock(TeckstackList);\r\n// const LoadTecList= hdLoading(TecList);\r\n\r\n// const {eventName ,onFailureStateName, loadAction, onSuccessStateName } =loadTecStack;\r\n\r\n// const TecstackListSaga =()=>{\r\n//     const tecStack = useSelector((state)=>(state[onSuccessStateName]),[]);\r\n//     const failure  =  useSelector((state)=>(state[onFailureStateName]),[]);\r\n//     const loading  = useSelector((state)=>(state[eventName]),[]);\r\n//     const dispatch = useDispatch();\r\n//     useEffect(()=>{\r\n//         dispatch(loadAction());\r\n//     },[dispatch])\r\n\r\n//   console.log( \"tLisk\",loading,failure );\r\n\r\n//     return(\r\n//          <>\r\n//             <LoadTecList \r\n//              failure ={failure} loading={loading} \r\n//             tecStack={tecStack}/>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default TecstackListSaga;","import React from 'react'\r\nimport { Item } from 'semantic-ui-react'\r\n\r\n\r\nconst ItemCard = (props)=>{\r\n  const {header,src,meta,children,extra } = props;\r\n  \r\n    return (\r\n        <Item>\r\n        <Item.Image src={src} />\r\n          <Item.Content>\r\n              <Item.Header >{header}</Item.Header>\r\n           <Item.Meta>\r\n                  {meta}\r\n            </Item.Meta>\r\n            <Item.Description>\r\n                  {children}\r\n            </Item.Description>\r\n            <Item.Extra>\r\n                {extra}\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n    );\r\n}\r\n\r\nexport default ItemCard","import React from 'react';\r\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Item, Label } from 'semantic-ui-react';\r\nimport ItemCard from './ItemCard';\r\nimport Font from './Font';\r\n\r\nconst ToyList = (props)=>{\r\n    console.log(props)\r\n     const { toyes } =  props;\r\n     const toyList= toyes.map(createList);\r\n   return(\r\n  <div style={style}>\r\n    <Item.Group divided>\r\n     <Item>\r\n       <Item.Content>\r\n         <Font size=\"50px\">TOY 프로젝트 소개</Font>\r\n       </Item.Content>\r\n     </Item>\r\n      {toyList}\r\n     </Item.Group>   \r\n    </div>\r\n   )\r\n}\r\nexport default ToyList;\r\n\r\n\r\n\r\n  const style = {\r\n    \"backgroundPosition\": \"center\",\r\n    \"minWidth\":\"1280px\",\r\n  }\r\n\r\n  const fontHeaderProps={\r\n      size:\"30px\", face:\"Jeju\"\r\n  };\r\n\r\n  const fontMeta={\r\n    size:\"25px\", face:\"Jeju\"\r\n  }\r\n\r\nconst createToyHead= (toy)=>{\r\n return (\r\n     <>\r\n      <Item.Header > \r\n            <Font {...fontHeaderProps} >{toy.name}</Font>\r\n            <a href={toy.github}  target=\"_blank\" rel=\"noopener noreferrer\" >  \r\n              <FontAwesomeIcon  size='2x' icon={faGithub} />\r\n            </a>\r\n      </Item.Header>\r\n     </>\r\n );\r\n}\r\n\r\nconst createTeces = (toy)=>{\r\n  const teces= toy.tecList.map((item,idx)=>{\r\n     const ret = item.icon && <Label key={idx} icon =  {item.icon} content={item.name}/>;\r\n     return ret || <Label key={idx}>{item.name}</Label>;\r\n  });\r\n  return teces;\r\n}\r\nconst createList= (toy,key)=>{\r\n    const {src,desc} =toy;\r\n    const header = createToyHead(toy);\r\n    const meta = <Font {...fontMeta}>{toy.myRole}</Font>\r\n    const extra = createTeces(toy);\r\n    const props={header,src,header,meta,extra}\r\n\r\n   return  (\r\n             <ItemCard key={key} {...props}>\r\n               <Font weight=\"bold\" face=\"Jeju\" size=\"18\" >\r\n                  {desc}\r\n               </Font>  \r\n            </ItemCard>\r\n          );\r\n}\r\n\r\n","import createLoadSaga from '../module/createLoadSaga';\r\nimport axiosCon from '../module/axios';\r\n\r\nexport const loadRest =()=>( \r\n  axiosCon.get(`/api/toyes/`)\r\n )\r\n  \r\nconst loadSaga= createLoadSaga(loadRest,{\r\n    eventName:'SAGA/LOAD/TOYES',\r\n    onSuccessStateName:'toyes'\r\n});\r\n\r\nexport default loadSaga;","\r\nimport ToyList from '../components/ToyList';\r\nimport loadToyes from '../reducers/loadToyes';\r\nimport {textTo_pTag} from '../module/utils';\r\nimport hoBlock from './hoBlock'\r\nimport hoLoadCompoent from './hoLoadCompoent';\r\n\r\nconst ToyListSaga = hoLoadCompoent(ToyList ,loadToyes,(props,success)=>{\r\n  \r\n    if(Array.isArray(success))\r\n     if(success[0] && typeof success[0].desc ==='string' ){\r\n        success.forEach((tec)=>{\r\n             if(typeof tec.desc ==='string')\r\n                tec.desc= textTo_pTag( tec.desc);\r\n        })\r\n    }\r\n\r\n   return {\r\n       ...props,\r\n       toyes:success\r\n   }\r\n})\r\nexport default hoBlock(ToyListSaga);\r\n\r\n\r\n","import 'semantic-ui-css/semantic.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport SelfIntroduceCardSaga from './containers/SelfIntroduceCardSaga';\r\nimport TecstackListSaga from './containers/TecstackListSaga';\r\nimport ToyListSaga from './containers/ToyListSaga';\r\n\r\nfunction App() {\r\n  return (\r\n    <> \r\n      <SelfIntroduceCardSaga/>\r\n        <TecstackListSaga/>\r\n        <ToyListSaga/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default function mergeReducer(reducers){\r\n return (state, action)=>{\r\n     if(!state){ //state 초기값 일떄 모든 리듀스들의 초기값을 하나로 합친다.\r\n         return reducers.reduce((acc,r)=>({...acc, ...r(state,action) }),{});\r\n     }\r\n     let nextState= state;\r\n     for(const r of reducers){\r\n        nextState = r(nextState,action);\r\n     }\r\n     return nextState;\r\n }\r\n}\r\n\r\n","import mergeReducer from '../module/mergeReducer';\r\nimport pendReducer from '../module/pendReducer';\r\nimport { all } from 'redux-saga/effects'\r\nimport loadPrivacy from './loadPrivacy';\r\nimport loadTecStack from './loadTecStack';\r\nimport loadToyes from './loadToyes';\r\n\r\nexport const rootReducer=mergeReducer([\r\n    pendReducer,\r\n    loadPrivacy.reducer,\r\n    loadTecStack.reducer,\r\n    loadToyes.reducer\r\n]);\r\n\r\nexport function* rootSaga() {\r\n    yield all(\r\n        [ \r\n            loadPrivacy.saga(),\r\n            loadTecStack.saga(),\r\n            loadToyes.saga()\r\n        ]\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport  {rootReducer , rootSaga}   from './reducers';\r\n\r\nconst sagaMiddleWare= createSagaMiddleware();\r\nconst store= createStore(rootReducer ,composeWithDevTools(applyMiddleware(sagaMiddleWare)) );\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}